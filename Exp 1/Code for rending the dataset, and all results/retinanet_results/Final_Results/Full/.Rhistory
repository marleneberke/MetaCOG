df <- df %>% select(video, sim_online, sim_retro, sim_NN)
df <- df %>% mutate(grouping = video > num_training_videos)
temp <- df %>% group_by(grouping) %>%
summarize(lower_online = get_ci(sim_online)[1],
lower_retro = get_ci(sim_retro)[1],
#lower_fitted = get_ci(sim_fitted)[1],
lower_NN = get_ci(sim_NN)[1],
upper_online = get_ci(sim_online)[2],
upper_retro = get_ci(sim_retro)[2],
#upper_fitted = get_ci(sim_fitted)[2],
upper_NN = get_ci(sim_NN)[2],
mean_online = mean(sim_online),
mean_retro = mean(sim_retro),
#mean_fitted = mean(sim_fitted),
mean_NN = mean(sim_NN))# %>%
first_half <- temp %>% filter(grouping==FALSE) %>% select(-grouping)
second_half <- temp %>% filter(grouping) %>% select(-grouping)
df1 <- first_half %>%
pivot_longer(everything(),
names_to = c(".value", "model"),
names_pattern = "(.+)_(.+)"
)
df2 <- second_half %>%
pivot_longer(everything(),
names_to = c(".value", "model"),
names_pattern = "(.+)_(.+)"
)
df1 <- df1 %>% mutate(group = "A")
df2 <- df2 %>% mutate(group = "B")
to_plot <- rbind(df1, df2)
to_plot
############################################################
#show learning V averaged across runs
setwd("~/Documents/03_Yale/Projects/001_Mask_RCNN/scratch_work_07_16_21/05_09_22/retinanet/Final_Results/Full/")
ground_truth_V = read_delim("ground_truth_V.csv", delim='&')
online_0 = read_csv("shuffle_0_faster_rcnn/online_V_processed.csv")
############################################################
#show learning V averaged across runs
setwd("~/Documents/03_Yale/Projects/001_Mask_RCNN/scratch_work_07_16_21/05_09_22/retinanet/Final_Results/Full/")
ground_truth_V = read_delim("ground_truth_V.csv", delim='&')
online_0 = read_csv("shuffle_0_retinanet/online_V_processed.csv")
online_1 = read_csv("shuffle_1_retinanet/online_V_processed.csv")
online_2 = read_csv("shuffle_2_retinanet/online_V_processed.csv")
online_3 = read_csv("shuffle_3_retinanet/online_V_processed.csv")
merged1 = merge(online_0, online_1, by = c("order_run"), suffixes = c(".0",".1"))
merged2 = merge(online_2, online_3, by = c("order_run"), suffixes = c(".2",".3"))
merged = merge(merged1, merged2, by = c("order_run"))
df <- merged %>% mutate(MSE = (MSE.0 + MSE.1 + MSE.2 + MSE.3)/4,
upper = (upper_MSE.0 + upper_MSE.1 + upper_MSE.2 + upper_MSE.3)/4,
lower = (lower_MSE.0 + lower_MSE.1 + lower_MSE.2 + lower_MSE.3)/4)
write_csv(df, "V_summary.csv")
ggplot(
df,
aes(
x = order_run,
y = MSE,
ymin = lower,
ymax = upper,
)
) + geom_line() + geom_ribbon(alpha = 0.5) +
theme(aspect.ratio = 1)
library(tidyverse)
library(boot)
source("~/Documents/03_Yale/Projects/001_Mask_RCNN/ORB_project3/Analysis/bootstrap_helper_funs.R")
NN1 = "retinanet"
'*' <- function(x, y)paste0(x,y)
####################################################################
library(rjson)
library(gridExtra)
####################################################################
library(rjson)
library(gridExtra)
NN1 = "retinanet"
setwd("~/Documents/03_Yale/Projects/001_Mask_RCNN/scratch_work_07_16_21/05_09_22/retinanet/Final_Results/Full/" * NN1)
setwd("~/Documents/03_Yale/Projects/001_Mask_RCNN/scratch_work_07_16_21/05_09_22/"*NN1*"/Final_Results/Full/")
gt_v = read_delim("ground_truth_V.csv", "&")[1,2:11]
gt_v = matrix(unlist(gt_v), nrow = 5, byrow = TRUE)
v_0 = fromJSON(file = "shuffle_0_"*NN1*"/avg_v.json")
v_1 = fromJSON(file = "shuffle_1_"*NN1*"/avg_v.json")
v_2 = fromJSON(file = "shuffle_2_"*NN1*"/avg_v.json")
v_3 = fromJSON(file = "shuffle_3_"*NN1*"/avg_v.json")
average_vs <- function(v_0, v_1, v_2, v_3){
v = matrix(NA, 5, 2)
for (i in 1:5){
for (j in 1:2){
v[i,j] = (v_0$avg_v[[j]][i] + v_1$avg_v[[j]][i] + v_2$avg_v[[j]][i] + v_3$avg_v[[j]][i])/4
}
}
return(v)
}
avg_v <- average_vs(v_0, v_1, v_2, v_3)
make_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1], matrix[,2]),
x = rep(1:5, 2),
y = c(rep("FA", 5), rep("M", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 1), high = "gray") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
par(mfrow=c(1,2))
plot1 <- make_plot(gt_v, NN1*" ground_truth v")
plot2 <- make_plot(avg_v, NN1*" avg v")
grid.arrange(plot1, plot2, ncol=2)
avg_v <- average_vs(v_0, v_1, v_2, v_3)
make_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1], matrix[,2]),
x = rep(1:5, 2),
y = c(rep("FA", 5), rep("M", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 1), high = "#003f5c") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
par(mfrow=c(1,2))
plot1 <- make_plot(gt_v, NN1*" ground_truth v")
plot2 <- make_plot(avg_v, NN1*" avg v")
grid.arrange(plot1, plot2, ncol=2)
gt_v
avg_v
####################################################################
tibble(avg_v)
?names
####################################################################
avg_v <- tibble(avg_v) %>% rename(hall = avg_v[,1], miss = [,2])
####################################################################
avg_v <- tibble(avg_v)
names(avg_v)
names(avg_v)
avg_v
colnames(avg_v)
average_vs <- function(v_0, v_1, v_2, v_3){
v = matrix(NA, 5, 2)
for (i in 1:5){
for (j in 1:2){
v[i,j] = (v_0$avg_v[[j]][i] + v_1$avg_v[[j]][i] + v_2$avg_v[[j]][i] + v_3$avg_v[[j]][i])/4
}
}
return(v)
}
avg_v <- average_vs(v_0, v_1, v_2, v_3)
####################################################################
tibble(hall = avg_v[,1], miss = avg_v[,2])
gt_v = tibble(hall = gt_v[,1], miss = gt_v[,2])
avg_v = cbind(rep("avg_v", nrow(avg_v)), avg_v)
avg_v = cbind(rep("avg_v", nrow(avg_v)), avg_v)
gt_v = cbind(rep("gt_v", nrow(gt_v)), gt_v)
to_plot = rbind(avg_v, gt_v)
avg_v
####################################################################
avg_v = tibble(hall = avg_v[,1], miss = avg_v[,2])
gt_v = tibble(hall = gt_v[,1], miss = gt_v[,2])
avg_v = cbind(rep("avg_v", nrow(avg_v)), avg_v)
gt_v = cbind(rep("gt_v", nrow(gt_v)), gt_v)
to_plot = rbind(avg_v, gt_v)
avg_v
NN1 = "retinanet"
setwd("~/Documents/03_Yale/Projects/001_Mask_RCNN/scratch_work_07_16_21/05_09_22/"*NN1*"/Final_Results/Full/")
gt_v = read_delim("ground_truth_V.csv", "&")[1,2:11]
gt_v = matrix(unlist(gt_v), nrow = 5, byrow = TRUE)
v_0 = fromJSON(file = "shuffle_0_"*NN1*"/avg_v.json")
v_1 = fromJSON(file = "shuffle_1_"*NN1*"/avg_v.json")
v_2 = fromJSON(file = "shuffle_2_"*NN1*"/avg_v.json")
v_3 = fromJSON(file = "shuffle_3_"*NN1*"/avg_v.json")
average_vs <- function(v_0, v_1, v_2, v_3){
v = matrix(NA, 5, 2)
for (i in 1:5){
for (j in 1:2){
v[i,j] = (v_0$avg_v[[j]][i] + v_1$avg_v[[j]][i] + v_2$avg_v[[j]][i] + v_3$avg_v[[j]][i])/4
}
}
return(v)
}
avg_v <- average_vs(v_0, v_1, v_2, v_3)
####################################################################
avg_v = tibble(hall = avg_v[,1], miss = avg_v[,2])
gt_v = tibble(hall = gt_v[,1], miss = gt_v[,2])
avg_v = cbind(rep("avg_v", nrow(avg_v)), avg_v)
gt_v = cbind(rep("gt_v", nrow(gt_v)), gt_v)
to_plot = rbind(avg_v, gt_v)
to_plot
avg_v
gt_v = read_delim("ground_truth_V.csv", "&")[1,2:11]
gt_v = matrix(unlist(gt_v), nrow = 5, byrow = TRUE)
v_0 = fromJSON(file = "shuffle_0_"*NN1*"/avg_v.json")
v_1 = fromJSON(file = "shuffle_1_"*NN1*"/avg_v.json")
v_2 = fromJSON(file = "shuffle_2_"*NN1*"/avg_v.json")
v_3 = fromJSON(file = "shuffle_3_"*NN1*"/avg_v.json")
average_vs <- function(v_0, v_1, v_2, v_3){
v = matrix(NA, 5, 2)
for (i in 1:5){
for (j in 1:2){
v[i,j] = (v_0$avg_v[[j]][i] + v_1$avg_v[[j]][i] + v_2$avg_v[[j]][i] + v_3$avg_v[[j]][i])/4
}
}
return(v)
}
avg_v <- average_vs(v_0, v_1, v_2, v_3)
make_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1], matrix[,2]),
x = rep(1:5, 2),
y = c(rep("FA", 5), rep("M", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 1), high = "#003f5c") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
####################################################################
avg_v = tibble(hall = avg_v[,1], miss = avg_v[,2])
gt_v = tibble(hall = gt_v[,1], miss = gt_v[,2])
avg_v = cbind(model = rep("avg_v", nrow(avg_v)), avg_v)
avg_v
gt_v = cbind(model = rep("gt_v", nrow(gt_v)), gt_v)
gt_v
to_plot = rbind(avg_v, gt_v)
to_plot
to_plot = rbind(avg_v, gt_v) %>% pivot_longer(c(hall, miss), names_to = "value")
to_plot = rbind(avg_v, gt_v) %>% pivot_longer(c(hall, miss), names_to = c("type", "value"))
?pivot_longer
to_plot = rbind(avg_v, gt_v) %>% pivot_longer(c(hall, miss))
to_plot
rbind(avg_v, gt_v)
to_plot = rbind(avg_v, gt_v) %>% pivot_longer(c(hall, miss))
to_plot
temp = rbind(avg_v, gt_v) %>% pivot_longer(c(hall, miss))
temp
avg_vs = temp %>% filter(model == "avg_v")
gt_vs = temp %>% filter(model == "gt_v")
avg_vs
to_plot = tibble(name = avg_vs$name, X = avg_vs$values, Y = gt_vs$value)
gt_vs
to_plot = tibble(name = avg_vs$name, X = avg_vs$value, Y = gt_vs$value)
to_plot
ggplot(to_plot, aes(x =  X, y = Y, color = name)) + geom_scatter()
ggplot(to_plot, aes(x =  X, y = Y, color = name)) + geom_point()
ggplot(
df,
aes(
x = order_run,
y = MSE,
ymin = lower,
ymax = upper,
)
) + geom_line() + geom_ribbon(alpha = 0.5) +
ylim(c(0, 1)) +
theme(aspect.ratio = 1)
ggplot(
df,
aes(
x = order_run,
y = MSE,
ymin = lower,
ymax = upper,
)
) + geom_line() + geom_ribbon(alpha = 0.5) +
theme(aspect.ratio = 1)
ggplot(to_plot, aes(x =  X, y = Y, color = name)) +
geom_point() + theme(aspect.ratio = 1)
ggplot(to_plot, aes(x =  X, y = Y, color = name)) +
geom_point(alpha = 0.7) + theme(aspect.ratio = 1)
ggplot(to_plot, aes(x =  X, y = Y, color = name)) +
geom_point(alpha = 0.5) + theme(aspect.ratio = 1)
ggplot(to_plot, aes(x =  X, y = Y, color = name)) +
geom_point(alpha = 0.5) + ylim(c(0,1)) + xlim(c(0,1)) +
theme(aspect.ratio = 1)
ggplot(to_plot, aes(x =  X, y = Y, color = name)) +
geom_point(alpha = 0.5) + ylim(c(0,1)) + xlim(c(0,1)) +
theme(aspect.ratio = 1) + ylabel("ground-truth")
ggplot(to_plot, aes(x =  X, y = Y, color = name)) +
geom_point(alpha = 0.5) + ylim(c(0,1)) + xlim(c(0,1)) +
theme(aspect.ratio = 1) + ylab("ground-truth")
ggplot(to_plot, aes(x =  X, y = Y, color = name)) +
geom_point(alpha = 0.5) + ylim(c(0,1)) + xlim(c(0,1)) +
theme(aspect.ratio = 1) + ylab("ground-truth") + xlab("inferred")
####################################################################
library(rjson)
library(gridExtra)
NN1 = "retinanet"
setwd("~/Documents/03_Yale/Projects/001_Mask_RCNN/scratch_work_07_16_21/05_09_22/"*NN1*"/Final_Results/Full/")
gt_v = read_delim("ground_truth_V.csv", "&")[1,2:11]
gt_v = matrix(unlist(gt_v), nrow = 5, byrow = TRUE)
v_0 = fromJSON(file = "shuffle_0_"*NN1*"/avg_v.json")
v_1 = fromJSON(file = "shuffle_1_"*NN1*"/avg_v.json")
v_2 = fromJSON(file = "shuffle_2_"*NN1*"/avg_v.json")
v_3 = fromJSON(file = "shuffle_3_"*NN1*"/avg_v.json")
average_vs <- function(v_0, v_1, v_2, v_3){
v = matrix(NA, 5, 2)
for (i in 1:5){
for (j in 1:2){
v[i,j] = (v_0$avg_v[[j]][i] + v_1$avg_v[[j]][i] + v_2$avg_v[[j]][i] + v_3$avg_v[[j]][i])/4
}
}
return(v)
}
avg_v <- average_vs(v_0, v_1, v_2, v_3)
make_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1], matrix[,2]),
x = rep(1:5, 2),
y = c(rep("FA", 5), rep("M", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 1), high = "#003f5c") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
par(mfrow=c(1,2))
plot1 <- make_plot(gt_v, NN1*" ground_truth v")
plot2 <- make_plot(avg_v, NN1*" avg v")
grid.arrange(plot1, plot2, ncol=2)
NN1 = "retinanet"
setwd("~/Documents/03_Yale/Projects/001_Mask_RCNN/scratch_work_07_16_21/05_09_22/"*NN1*"/Final_Results/Full/")
gt_v = read_delim("ground_truth_V.csv", "&")[1,2:11]
gt_v = matrix(unlist(gt_v), nrow = 5, byrow = TRUE)
v_0 = fromJSON(file = "shuffle_0_"*NN1*"/avg_v.json")
v_1 = fromJSON(file = "shuffle_1_"*NN1*"/avg_v.json")
v_2 = fromJSON(file = "shuffle_2_"*NN1*"/avg_v.json")
v_3 = fromJSON(file = "shuffle_3_"*NN1*"/avg_v.json")
average_vs <- function(v_0, v_1, v_2, v_3){
v = matrix(NA, 5, 2)
for (i in 1:5){
for (j in 1:2){
v[i,j] = (v_0$avg_v[[j]][i] + v_1$avg_v[[j]][i] + v_2$avg_v[[j]][i] + v_3$avg_v[[j]][i])/4
}
}
return(v)
}
avg_v <- average_vs(v_0, v_1, v_2, v_3)
####################################################################
avg_v
####################################################################
make_FA_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1]),
x = rep(1:5),
y = c(rep("FA", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 1), high = "#003f5c") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
make_FA_plot(avg_v, "avg_v")
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 0.5), high = "#003f5c") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
####################################################################
make_FA_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1]),
x = rep(1:5),
y = c(rep("FA", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 0.5), high = "#003f5c") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
make_FA_plot(avg_v, "avg_v")
make_FA_plot(gt_v, "gt_v")
####################################################################
make_FA_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1]),
x = rep(1:5),
y = c(rep("FA", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 0.2), high = "#003f5c") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
make_FA_plot(avg_v, "avg_v")
make_FA_plot(gt_v, "gt_v")
####################################################################
make_FA_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1]),
x = rep(1:5),
y = c(rep("FA", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 0.5), high = "#003f5c") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
make_FA_plot(avg_v, "avg_v")
make_FA_plot(gt_v, "gt_v")
make_M_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1]),
x = rep(1:5),
y = c(rep("M", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 0.5), high = "#444e86") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
make_M_plot(avg_v, "avg_v")
make_M_plot(gt_v, "gt_v")
make_M_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,2]),
x = rep(1:5),
y = c(rep("M", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 0.5), high = "#444e86") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
make_M_plot(avg_v, "avg_v")
make_M_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,2]),
x = rep(1:5),
y = c(rep("M", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 1.0), high = "#444e86") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
make_FA_plot(avg_v, "avg_v")
make_FA_plot(gt_v, "gt_v")
make_M_plot(avg_v, "avg_v")
make_M_plot(gt_v, "gt_v")
avg_fa = make_FA_plot(avg_v, "avg_v")
gt_fa = make_FA_plot(gt_v, "gt_v")
avg_m = make_M_plot(avg_v, "avg_v")
gt_m = make_M_plot(gt_v, "gt_v")
grid.arrange(avg_fa, gt_fa, ncol=2)
grid.arrange(avg_fa, avg_m, ncol=2)
grid.arrange(gt_fa, gt_m, ncol=2)
####################################################################
make_FA_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,1]),
x = rep(1:5),
y = c(rep("FA", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 0.5), high = "#955196") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
make_M_plot <- function(matrix, title){
df <- tibble(
values = c(matrix[,2]),
x = rep(1:5),
y = c(rep("M", 5))
)
df$x <- as.factor(df$x)
plot <- df %>% ggplot(aes(fct_rev(x), y, fill = values)) +
geom_tile() +
scale_fill_gradient2(limits = c(0, 1.0), high = "#dd5182") + #high = "#EF5675"
geom_text(aes(label = round(values, 2))) + coord_flip() +
ggtitle(title) + theme(aspect.ratio = 1)
return(plot)
}
avg_fa = make_FA_plot(avg_v, "avg_v")
gt_fa = make_FA_plot(gt_v, "gt_v")
avg_m = make_M_plot(avg_v, "avg_v")
gt_m = make_M_plot(gt_v, "gt_v")
grid.arrange(avg_fa, avg_m, ncol=2)
grid.arrange(gt_fa, gt_m, ncol=2)
